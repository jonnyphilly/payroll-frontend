{"ast":null,"code":"var _jsxFileName = \"/Users/jonphillips/Desktop/tanda/react/adnat-react/frontend/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst baseAPI = \"http://localhost:3000\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      organisations: [],\n      organisation: {},\n      sessionId: ''\n    }; // BINDING GOES HERE\n\n    this.fetchUser = this.fetchUser.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  fetchUser() {\n    if (this.props.location.state) {\n      const sessionId = this.props.location.state.sessionId;\n      this.setState({\n        sessionId\n      });\n      const headers = {\n        'Authorization': sessionId\n      };\n      axios.get(baseAPI + \"/users/me\", {\n        headers\n      }).then(response => {\n        this.setState({\n          user: response.data\n        });\n        console.log(this.state.user);\n      });\n    }\n  }\n\n  handleLogout() {\n    console.log('logging out');\n    axios.delete(baseAPI + \"/auth/logout\", {\n      headers: {\n        'Authorization': this.state.sessionId\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        this.setState({\n          user: {},\n          organisations: [],\n          organisation: {},\n          sessionId: ''\n        });\n        alert(\"Logged out successfully!\");\n        this.props.history.push({\n          pathname: '/'\n        });\n      }\n    });\n  }\n\n  fetchOrganisations() {\n    console.log('fetching organisations');\n\n    if (this.props.location.state) {\n      const sessionId = this.props.location.state.sessionId;\n      this.setState({\n        sessionId\n      });\n      const headers = {\n        'Authorization': sessionId\n      };\n      axios.get(baseAPI + \"/organisations\", {\n        headers\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Home \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Logged in as \", this.state.user.name, \".\", React.createElement(\"button\", {\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Log out\")));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/jonphillips/Desktop/tanda/react/adnat-react/frontend/src/components/Home.js"],"names":["React","Component","axios","baseAPI","Home","constructor","props","state","user","organisations","organisation","sessionId","fetchUser","bind","handleLogout","location","setState","headers","get","then","response","data","console","log","delete","status","alert","history","push","pathname","fetchOrganisations","componentDidMount","render","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst baseAPI = `http://localhost:3000`;\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: {},\n      organisations: [],\n      organisation: {},\n      sessionId: ''\n    }\n    // BINDING GOES HERE\n    this.fetchUser = this.fetchUser.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  fetchUser() {\n    if(this.props.location.state) {\n      const { sessionId } = this.props.location.state\n      this.setState({ sessionId })\n      const headers = { 'Authorization': sessionId }\n      axios.get(baseAPI + `/users/me`, { headers })\n        .then(response => {\n          this.setState({ user: response.data })\n          console.log(this.state.user)\n        })\n    }\n  }\n\n  handleLogout() {\n    console.log('logging out')\n    axios.delete(baseAPI + `/auth/logout`, {\n      headers: {\n        'Authorization': this.state.sessionId\n      }\n    })\n    .then(response => {\n      if(response.status === 200) {\n        this.setState({\n          user: {},\n          organisations: [],\n          organisation: {},\n          sessionId: ''\n        })\n        alert(\"Logged out successfully!\")\n        this.props.history.push({\n          pathname: '/'\n        })\n      }\n    })\n  }\n\n  fetchOrganisations() {\n    console.log('fetching organisations')\n    if(this.props.location.state) {\n      const { sessionId } = this.props.location.state\n      this.setState({ sessionId })\n      const headers = { 'Authorization': sessionId }\n      axios.get(baseAPI + `/organisations`, { headers })\n    }\n  }\n\n  componentDidMount() {\n    this.fetchUser()\n  }\n\n  render() {\n    return(\n      <div className='home'>\n        <h2> Home </h2>\n        <p>\n          Logged in as {this.state.user.name}.\n          <button onClick={this.handleLogout}>\n            Log out\n          </button>\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}