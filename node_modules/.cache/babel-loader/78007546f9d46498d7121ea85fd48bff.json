{"ast":null,"code":"var _jsxFileName = \"/Users/jonphillips/Desktop/tanda/react/adnat-react/frontend/src/components/Shift.js\";\nimport React, { Component } from 'react';\n\nclass Shift extends Component {\n  constructor(props) {\n    super(props); // BINDING GOES HERE\n  }\n\n  render() {\n    const userLine = this.props.users.find(user => user.id === this.props.shift.userId);\n    const start = new Date(this.props.shift.start);\n    const finish = new Date(this.props.shift.finish);\n    const hour = 1000 * 60 * 60;\n    const time = (finish.getTime() - start.getTime() - this.props.shift.breakLength * 1000 * 60) / hour;\n    return React.createElement(\"tr\", {\n      key: this.props.shift.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \" \", userLine ? userLine.name : '', \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \" \", this.props.shift.start, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \" \", this.props.shift.start.toLocaleString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    }), \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \" \", this.props.shift.finish.toLocaleString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    }), \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \" \", this.props.shift.breakLength, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" \", this.props.shift.time, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \" \", new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(time * this.props.location.state.organisation.hourlyRate)));\n  }\n\n}\n\nexport default Shift;","map":{"version":3,"sources":["/Users/jonphillips/Desktop/tanda/react/adnat-react/frontend/src/components/Shift.js"],"names":["React","Component","Shift","constructor","props","render","userLine","users","find","user","id","shift","userId","start","Date","finish","hour","time","getTime","breakLength","index","name","toLocaleString","minute","hour12","Intl","NumberFormat","style","currency","format","location","state","organisation","hourlyRate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGnB;AACC;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAY,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAA3D,CAAjB;AACA,UAAMC,KAAK,GAAG,IAAIC,IAAJ,CAAS,KAAKV,KAAL,CAAWO,KAAX,CAAiBE,KAA1B,CAAd;AACA,UAAME,MAAM,GAAG,IAAID,IAAJ,CAAS,KAAKV,KAAL,CAAWO,KAAX,CAAiBI,MAA1B,CAAf;AACA,UAAMC,IAAI,GAAG,OAAO,EAAP,GAAY,EAAzB;AACA,UAAMC,IAAI,GAAG,CAAEF,MAAM,CAACG,OAAP,KAAoBL,KAAK,CAACK,OAAN,EAApB,GAAwC,KAAKd,KAAL,CAAWO,KAAX,CAAiBQ,WAAjB,GAA+B,IAA/B,GAAsC,EAAhF,IAAwFH,IAArG;AACA,WACE;AAAI,MAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWO,KAAX,CAAiBS,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMd,QAAQ,GAAGA,QAAQ,CAACe,IAAZ,GAAmB,EAAjC,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAKjB,KAAL,CAAWO,KAAX,CAAiBE,KAAvB,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAKT,KAAL,CAAWO,KAAX,CAAiBE,KAAjB,CAAuBS,cAAvB,CAAsC,OAAtC,EAA+C;AAAEN,MAAAA,IAAI,EAAE,SAAR;AAAmBO,MAAAA,MAAM,EAAE,SAA3B;AAAsCC,MAAAA,MAAM,EAAE;AAA9C,KAA/C,CAAN,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAKpB,KAAL,CAAWO,KAAX,CAAiBI,MAAjB,CAAwBO,cAAxB,CAAuC,OAAvC,EAAgD;AAAEN,MAAAA,IAAI,EAAE,SAAR;AAAmBO,MAAAA,MAAM,EAAE,SAA3B;AAAsCC,MAAAA,MAAM,EAAE;AAA9C,KAAhD,CAAN,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAKpB,KAAL,CAAWO,KAAX,CAAiBQ,WAAvB,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAKf,KAAL,CAAWO,KAAX,CAAiBM,IAAvB,MANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,IAAIQ,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA/B,EAAsEC,MAAtE,CAA6EZ,IAAI,GAAG,KAAKb,KAAL,CAAW0B,QAAX,CAAoBC,KAApB,CAA0BC,YAA1B,CAAuCC,UAA3H,CAAN,CAPF,CADF;AAWD;;AAxB2B;;AA2B9B,eAAe/B,KAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Shift extends Component {\n  constructor(props) {\n    super(props)\n\n  // BINDING GOES HERE\n  }\n\n  render() {\n    const userLine = this.props.users.find(user => user.id === this.props.shift.userId)\n    const start = new Date(this.props.shift.start)\n    const finish = new Date(this.props.shift.finish)\n    const hour = 1000 * 60 * 60\n    const time = ((finish.getTime() - (start.getTime()) - (this.props.shift.breakLength * 1000 * 60))) / hour\n    return(\n      <tr key={this.props.shift.index}>\n        <td> {userLine ? userLine.name : ''} </td>\n        <td> {this.props.shift.start} </td>\n        <td> {this.props.shift.start.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })} </td>\n        <td> {this.props.shift.finish.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })} </td>\n        <td> {this.props.shift.breakLength} </td>\n        <td> {this.props.shift.time} </td>\n        <td> {new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD'}).format(time * this.props.location.state.organisation.hourlyRate)}</td>\n      </tr>\n    )\n  }\n}\n\nexport default Shift;\n"]},"metadata":{},"sourceType":"module"}